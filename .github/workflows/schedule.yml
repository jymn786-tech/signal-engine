name: Signal Engine (Prod Minute Loop)

on:
  workflow_dispatch:

concurrency:
  group: engine-minute-loop-prod
  cancel-in-progress: true

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 200

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install pya3 urllib3 pandas
          fi

      # Restore dedup state from cache
      - name: Restore dedup cache
        uses: actions/cache@v4
        with:
          path: state
          key: dedup-${{ github.run_id }}
          restore-keys: |
            dedup-

      - name: Minute loop (manual start; auto-stop at 12:01 IST)
        env:
          ALICE_USER_ID: ${{ secrets.ALICE_USER_ID }}
          ALICE_API_KEY: ${{ secrets.ALICE_API_KEY }}
          SYMBOL_LIST:   ${{ secrets.SYMBOL_LIST }}
          WEBHOOK_URL:   ${{ secrets.WEBHOOK_URL }}
          CONTRACT_MASTER_DIR: .
          SURGE_PCT: '0.02'
          START_UTC: '03:45:00'
          END_UTC:   '06:31:00'
        run: |
          set -e
          echo "Started at UTC: $(date -u +"%F %T")"

          START_TS=$(date -u -d "$(date -u +%F) $START_UTC" +%s)
          END_TS=$(date -u -d "$(date -u +%F) $END_UTC" +%s)

          while :; do
            NOW_TS=$(date -u +%s)
            if [ "$NOW_TS" -ge "$START_TS" ]; then
              break
            fi
            SEC=$(date +%S); sleep $((60 - 10#$SEC))
          done

          echo "Entering minute loop at UTC: $(date -u +"%F %T") (IST $(TZ=Asia/Kolkata date +"%T"))"
          while :; do
            NOW_TS=$(date -u +%s)
            if [ "$NOW_TS" -ge "$END_TS" ]; then
              echo "Window over at UTC: $(date -u +"%F %T") (IST $(TZ=Asia/Kolkata date +"%T"))"
              break
            fi

            python signal_engine.py || true

            # Save dedup state to cache each loop iteration
            tar -czf dedup_state.tar.gz state || true

            SEC=$(date +%S)
            sleep $((60 - 10#$SEC))
          done
