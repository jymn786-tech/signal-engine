name: Run Signal Engine (minute loop)

on:
  workflow_dispatch:
  schedule:
    - cron: '45 3 * * 1-5'  # Start at 03:45 UTC (== 09:15 IST), Mon–Fri

concurrency:
  group: engine-minute-loop
  cancel-in-progress: true

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 200  # plenty for 03:45→06:31 UTC

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install pya3 urllib3 pandas
          fi

      - name: Minute loop (03:45–06:31 UTC)
        env:
          ALICE_USER_ID: ${{ secrets.ALICE_USER_ID }}
          ALICE_API_KEY: ${{ secrets.ALICE_API_KEY }}
          SYMBOL_LIST:   ${{ secrets.SYMBOL_LIST }}
          WEBHOOK_URL:   ${{ secrets.WEBHOOK_URL }}
          CONTRACT_MASTER_DIR: .
          # Tuning (optional)
          SURGE_PCT: '0.02'
        run: |
          set -e
          echo "Starting minute loop at: $(date -u +"%F %T") UTC"

          # End boundary for today in UTC (06:31:00)
          END_TS=$(date -u -d "$(date -u +%F) 06:31:00" +%s)

          while :; do
            NOW_TS=$(date -u +%s)
            if [ "$NOW_TS" -ge "$END_TS" ]; then
              echo "Window over ($(date -u +"%F %T") UTC). Exiting."
              break
            fi

            # Run once
            python signal_engine.py || true

            # Sleep to next exact minute boundary to keep cadence tight
            SEC=$(date +%S)
            SLEEP=$((60 - 10#$SEC))
            sleep "$SLEEP"
          done
